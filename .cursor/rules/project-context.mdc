---
globs: "**"
description: Project context and core principles
alwaysApply: true
---

# Project Context {#id:project-context}

## Core Principles {#id:core-principles}
- **Deterministic Simulation**: Fixed-step physics with seeded RNGs for reproducibility
- **Performance Target**: 30+ FPS with 20+ vehicles (baseline), scales to 1000+ vehicles
- **Quality Standards**: See [Quality Standards Guide](mdc:docs/QUALITY_STANDARDS.md) for enforcement

## Key Components {#id:key-components}
- **Simulation**: [simulation.py](mdc:src/traffic_sim/core/simulation.py) - Main simulation engine
- **Drivers**: [driver.py](mdc:src/traffic_sim/core/driver.py) - Driver behavior and IDM controller
- **Vehicles**: [vehicle.py](mdc:src/traffic_sim/core/vehicle.py) - Vehicle models and physics
- **Rendering**: [app.py](mdc:src/traffic_sim/render/app.py) - Arcade-based visualization

## Development Workflow {#id:development-workflow}
- **Setup**: `bazel build //...` (Bazel 7.1.1+ build system ready)
- **Testing**: `bazel test //...` (comprehensive test suite)
- **Quality**: `bazel build //...` (integrated quality gates)
- **Architecture**: See [Architecture Guide](mdc:docs/ARCHITECTURE.md) for detailed patterns

## Hybrid Architecture {#id:hybrid-architecture}
**Streamlined approach**: 95% Bazel + 5% Virtual Environment for optimal efficiency

### Command Selection {#id:command-selection}
- **Bazel** (Primary): Building, quality checks, CI/CD, core simulation logic
- **Virtual Environment** (Development): Testing, scripts with external dependencies (numpy, arcade, pymunk)
- **Task Commands** (Convenience): `task quality`, `task performance`, `task test`

### Quick Commands {#id:quick-commands}
- **Build**: `bazel build //...` (integrated quality gates)
- **Test**: `bazel test //...` or `uv run python -m pytest tests/`
- **Performance**: `task performance` or `uv run python scripts/benchmarking_framework.py`
- **Quality**: `task quality` (comprehensive quality checks)

### Troubleshooting {#id:troubleshooting}
- **Build Issues**: `bazel clean && bazel build //...`
- **Dependency Issues**: Activate virtual environment for development
- **Performance Issues**: Use `task performance` for benchmarking
- **Quality Issues**: Use `task quality` for comprehensive checks

## Project Structure {#id:project-structure}
- **Core Logic**: [src/traffic_sim/core/](mdc:src/traffic_sim/core/) - Simulation engine, vehicles, drivers
- **Rendering**: [src/traffic_sim/render/](mdc:src/traffic_sim/render/) - Arcade-based visualization
- **Configuration**: [config/](mdc:config/) - YAML configuration files
- **Tests**: [tests/](mdc:tests/) - Comprehensive test suite
- **Documentation**: [docs/](mdc:docs/) - Consolidated guides

## Key Features {#id:key-features}
- **2D Traffic Simulation**: Stadium track with realistic vehicle behavior
- **Statistical Drivers**: Gaussian copula sampling with correlations
- **IDM Controller**: Intelligent Driver Model with jerk limiting
- **Perception System**: Occlusion-based visibility and dynamic SSD
- **Safety Analytics**: AASHTO/TxDOT-style curve speed calculations
- **Live HUD**: Real-time safety panels and perception data
- **Collision System**: Pymunk physics integration with lateral push effects
- **Data Logging**: Comprehensive incident tracking, performance metrics, CSV export

## Task Commands {#id:task-commands}
- **Quality**: `task quality` (gates), `task quality:monitor` (detailed), `task quality:analyze` (comprehensive)
- **Performance**: `task performance` (benchmark), `task performance:scale` (scalability), `task performance:monitor` (real-time)
- **Specialized**: `task profile` (profiling), `task validate` (validation)
