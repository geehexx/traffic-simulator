---
globs: "**"
description: Essential code quality patterns
alwaysApply: true
---

# Code Quality Standards {#id:code-quality-standards}

## Type Safety {#id:type-safety}
- **Pattern**: Use `from __future__ import annotations`
- **Reference**: See [Quality Standards Guide](mdc:docs/QUALITY_STANDARDS.md#type-annotations) for details

## Import Organization {#id:import-organization}
- **Pattern**: Standard library, third-party, local imports
- **Reference**: See [Quality Standards Guide](mdc:docs/QUALITY_STANDARDS.md#import-organization) for details

## Error Handling {#id:error-handling}
- **Pattern**: Specific exceptions, context in messages
- **Reference**: See [Quality Standards Guide](mdc:docs/QUALITY_STANDARDS.md#error-handling) for details

## Quality Gates {#id:quality-gates}
- **Tools**: Pyright, Ruff, Bandit, Radon (integrated into Bazel)
- **Reference**: See [quality_gates.yaml](mdc:quality_gates.yaml) for thresholds
- **Usage**: `bazel build //...` (all quality checks integrated with Bazel 7.1.1+)

## Quality Analysis Modes {#id:quality-analysis}
- **Check**: `bazel build //...` - Quality gates enforcement (integrated)
- **Monitor**: `bazel test //... --test_output=all` - Detailed quality monitoring
- **Analyze**: `bazel query //...` - Comprehensive static analysis

## Code Style {#id:code-style}
- **Line Length**: 100 characters
- **Functions**: <50 lines, complexity â‰¤10
- **Classes**: <200 lines
- **Docstrings**: Google-style for public APIs
- **Reference**: See [Quality Standards Guide](mdc:docs/QUALITY_STANDARDS.md#code-quality-standards) for details

## IDE Integration {#id:ide-integration}
- **VS Code**: Python extension with Pyright integration
- **PyCharm**: Enable type checking and external tools
- **Configuration**: Automatic detection from pyproject.toml
- **Reference**: See [Quality Standards Guide](mdc:docs/QUALITY_STANDARDS.md#ide-integration) for details
